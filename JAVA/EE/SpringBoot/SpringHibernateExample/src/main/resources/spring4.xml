<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!--
		Spring 4 Hibernate 4集成更改

		现在让我们改变我们的应用程序以使用Hibernate 4而不是Hibernate 3.对于这种迁移，我们需要进行配置更改:

		1. 在pom.xml文件中将hibernate版本更改为4.3.5.
		2. 更改spring bean配置文件。 Spring bean配置下面适用于Spring 4和Hibernate 4版本。

		对于hibernate 4，我们需要对SessionFactory bean使用org.springframework.orm.hibernate4.LocalSessionFactoryBean，ORM Spring已经为Hibernate 3合并了两个类，现在只有一个类，这样可以避免混淆。 所有其他配置与以前相同。

		就是这样，我们的项目成功迁移到Hibernate 4，不是吗。 只需更改SpringHibernateMain类以使用spring4.xml进行bean配置，它就可以正常工作，您将获得与以前相同的输出。
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/TestDB" />
		<property name="username" value="pankaj" />
		<property name="password" value="pankaj123" />
	</bean>


<!-- Hibernate 4 SessionFactory Bean definition -->
<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.journaldev.model.Person</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>


	<bean id="personDAO" class="com.journaldev.dao.PersonDAOImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
</beans>
