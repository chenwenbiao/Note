package com.springdata.jdbc.transaction.local.controller;

import com.springdata.jdbc.transaction.local.service.AccountService;
import com.springdata.jdbc.transaction.local.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.PostConstruct;

@RestController
public class TransactionController {

    @Autowired
    JdbcTemplate jdbcTemplate;

    @Autowired
    UserService userService;

    @Autowired
    AccountService accountService;

    @PostConstruct
    public void init() {
        jdbcTemplate.execute("drop table if exists user");
        jdbcTemplate.execute("drop table if exists account");

        jdbcTemplate.execute("CREATE TABLE USER (" +
                "id INT NOT NULL," +
                "NAME VARCHAR(20) not null," +
                "PRIMARY KEY (id)" +
                ");");
        jdbcTemplate.execute("CREATE TABLE ACCOUNT(" +
                "id INT NOT NULL," +
                "accountName VARCHAR(20) NOT NULL," +
                "USER VARCHAR(20) NOT NULL," +
                "money INT," +
                "PRIMARY KEY (id)" +
                ");");

        // ==============================================
        // 这个表不是演示事务的,而是演示专门生成唯一自增id的
        // In HSQLDB you can use IDENTITY keyword to define an auto-increment column, normally, this is the primary key.
        // By default, the IDENTITY value is start with zero.
        jdbcTemplate.execute("CREATE TABLE id_generator(" +
                "id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
                ");");
        // The IDENTITY value is starting with 100 and increase by 1.
        /*
        CREATE TABLE users (
          id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,
          name VARCHAR(30),
          email  VARCHAR(50)
        );
        * */
        // http://hsqldb.org/doc/guide/databaseobjects-chapt.html
    }

    @GetMapping(value = "/tx/api/user/create")
    void createUser() {
        userService.createUser("xzj1");
    }

    @GetMapping(value = "/tx/api/users")
    public String getAllUser() {
        System.out.println("查询user");
        userService.getAllUser();
        return "user query ok";
    }

    @GetMapping(value = "/tx/api/accounts")
    public String getAllAccount() {
        System.out.println("查询account");
        accountService.getAllAccount();
        return "account query ok";
    }

    @GetMapping(value = "/getInsertId")
    public String getInsertId() {
        int ret = jdbcTemplate.update("INSERT INTO id_generator (id) VALUES (DEFAULT)");
        // mysql: int id = jdbcTemplate.update("INSERT INTO id_generator VALUES(NULL) @@IDENTITY");
        System.out.println("id");
        return "插入id: " + ret;
    }

}
