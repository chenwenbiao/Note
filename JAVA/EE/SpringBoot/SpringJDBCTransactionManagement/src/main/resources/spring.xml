<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!--
		Spring事务管理 - Bean配置

		创建一个名为“spring.xml”的Spring Bean配置文件。 
		我们将在测试程序中使用它来连接spring bean并执行我们的JDBC程序来测试事务管理。
	-->
	
	<!--  
		spring bean配置文件中需要注意的重点是：

		tx：annotation-driven元素用于告诉Spring context我们正在使用基于注释的事务管理配置。
		transaction-manager属性用于提供事务管理器bean名称。
		事务管理器的默认值是transactionManager，但我仍然要避免混淆。 
		proxy-target-class属性用于告诉Spring context使用基于类的代理，如果没有它，
		您将获得运行时异常，例如Exception in thread “main” org.springframework.
		beans.factory.BeanNotOfRequiredTypeException: 
		Bean named ‘customerManager’ must be of type [com.
		journaldev.spring.jdbc.service.CustomerManagerImpl], 
		but was actually of type [com.sun.proxy.$Proxy6]

		由于我们使用JDBC，因此我们创建了类型为
		org.springframework.jdbc.datasource.DataSourceTransactionManager的
		transactionManager bean。这非常重要，我们应该根据我们的事务API使用正确的事务管理器实现类。

		dataSource bean用于创建DataSource对象，我们需要提供数据库配置属性，
		如driverClassName，url，username和password。根据您的本地设置更改这些值。
		
		我们正在将dataSource注入customerDAO bean。类似地，
		我们将customerDAO bean注入customerManager bean定义。
	-->

	<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<!-- Creating TransactionManager Bean, since JDBC we are creating of type 
		DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- MySQL DB DataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/TestDB" />
		<property name="username" value="pankaj" />
		<property name="password" value="pankaj123" />
	</bean>

	<bean id="customerDAO" class="com.journaldev.spring.jdbc.dao.CustomerDAOImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="customerManager" class="com.journaldev.spring.jdbc.service.CustomerManagerImpl">
		<property name="customerDAO" ref="customerDAO"></property>
	</bean>

</beans>
