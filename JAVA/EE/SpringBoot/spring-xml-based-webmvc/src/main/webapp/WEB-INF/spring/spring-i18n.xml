<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <beans:bean id="messageSource"
                class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--basename属性用于提供资源包的位置-->
        <!--classpath：messages表示资源包位于类路径中，并且名称模式遵循messages_{locale}.properties-->
        <beans:property name="basename" value="classpath:messages"/>
        <!--defaultEncoding属性用于定义用于消息的编码-->
        <beans:property name="defaultEncoding" value="UTF-8"/>
    </beans:bean>

    <!--CookieLocaleResolver的bean用于在客户端请求中设置关于locale的cookie，以便以后的请求可以根据cookie识别用户区域,进而发送特定语言环境的响应.可以要求用户在第一次启动Web应用程序时选择语言环境，并且使用cookie记录，这样后续的请求中,我们可以根据cookie识别用户区域.-->

    <!--如果我们不注册任何“localeResolver”，默认情况下将使用AcceptHeaderLocaleResolver，
    它通过HTTP请求中的accept-language标头来解析用户区域,进而返回相应的响应-->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <beans:property name="defaultLocale" value="en"/>
        <beans:property name="cookieName" value="myAppLocaleCookie"></beans:property>
        <beans:property name="cookieMaxAge" value="3600"></beans:property>
    </beans:bean>

    <!--LocaleChangeInterceptor位置改变的拦截器配置, 用来拦截用户请求并识别用户区域的改变.
    如果没有此拦截器，我们将无法更改用户locale设置,并根据用户的新区域设置发送响应。-->
    <interceptors>
        <beans:bean
                class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <!--参数名称是可配置的，我们使用locale的请求参数名称作为“locale”:http://localhost:8080/test/?locale=fr,-->
            <beans:property name="paramName" value="locale"/>
        </beans:bean>
    </interceptors>

</beans:beans>
